// Autogenerated code, do not change directly.
// To make changes to this file, please modify the templates at
// go-kit-middlewarer/tmpl/*.tmpl

package http

import (
	"context"
	"net/http"

	"github.com/ayiga/go-kit-middlewarer/encoding"

	"gk-middlewarer/service"
)

var _ service.StringService

type embedMime struct {
	mime string
}

func (em *embedMime) GetMime() string {
	if em == nil || em.mime == "" {
		return "application/json"
	}

	return em.mime
}

func (em *embedMime) SetMime(mime string) {
	em.mime = mime
}

// uppercaseRequest defines a Request structure for the Method github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Uppercase
type uppercaseRequest struct {
	*embedMime
	Str string `json:"str" xml:"str"`
}

// uppercaseResponse defines a Response structure for the Method github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Uppercase
type uppercaseResponse struct {
	*embedMime
	Upper string `json:"upper" xml:"upper"`
	Err   error  `json:"err" xml:"err"`
}

// decodeUppercaseRequest creates a decoder for github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Uppercase
func decodeUppercaseRequest(ctx context.Context, r *http.Request) (interface{}, error) {
	req := new(uppercaseRequest)
	req.embedMime = new(embedMime)
	return encoding.Default().DecodeRequest(req)(ctx, r)
}

// decodeUppercaseResponse creates a decoder for github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Uppercase
func decodeUppercaseResponse(ctx context.Context, r *http.Response) (interface{}, error) {
	req := new(uppercaseResponse)
	req.embedMime = new(embedMime)
	return encoding.Default().DecodeResponse(req)(ctx, r)
}

// encodeUppercaseRequest creates an encoder for github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Uppercase
func encodeUppercaseRequest(ctx context.Context, r *http.Request, request interface{}) error {
	return encoding.Default().EncodeRequest()(ctx, r, request)
}

// encodeUppercaseResponse creates an encoder for github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Uppercase
func encodeUppercaseResponse(ctx context.Context, w http.ResponseWriter, response interface{}) error {
	return encoding.Default().EncodeResponse()(ctx, w, response)
}

// countRequest defines a Request structure for the Method github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Count
type countRequest struct {
	*embedMime
	Str string `json:"str" xml:"str"`
}

// countResponse defines a Response structure for the Method github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Count
type countResponse struct {
	*embedMime
	Count int `json:"count" xml:"count"`
}

// decodeCountRequest creates a decoder for github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Count
func decodeCountRequest(ctx context.Context, r *http.Request) (interface{}, error) {
	req := new(countRequest)
	req.embedMime = new(embedMime)
	return encoding.Default().DecodeRequest(req)(ctx, r)
}

// decodeCountResponse creates a decoder for github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Count
func decodeCountResponse(ctx context.Context, r *http.Response) (interface{}, error) {
	req := new(countResponse)
	req.embedMime = new(embedMime)
	return encoding.Default().DecodeResponse(req)(ctx, r)
}

// encodeCountRequest creates an encoder for github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Count
func encodeCountRequest(ctx context.Context, r *http.Request, request interface{}) error {
	return encoding.Default().EncodeRequest()(ctx, r, request)
}

// encodeCountResponse creates an encoder for github.com/OahcUil94/go-kit-training/gk-middlewarer/service.StringService.Count
func encodeCountResponse(ctx context.Context, w http.ResponseWriter, response interface{}) error {
	return encoding.Default().EncodeResponse()(ctx, w, response)
}
